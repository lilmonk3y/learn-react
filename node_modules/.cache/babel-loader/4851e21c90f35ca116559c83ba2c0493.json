{"ast":null,"code":"var _jsxFileName = \"/home/christian/Code/todo-made-in-react/src/NewTodoModal/NewTodoModal.tsx\";\nimport ReactDOM from \"react-dom\";\nimport './NewTodoModal.css';\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction NewTodoModal(_ref) {\n  let {\n    setModalVisible,\n    modalVisible,\n    todos,\n    setTodos\n  } = _ref;\n  return /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(NewTodo, {\n    todos: todos,\n    setTodos: setTodos,\n    setModalVisible: setModalVisible,\n    modalVisible: modalVisible\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this), document.getElementById('modal'));\n}\n\nfunction NewTodo(_ref2) {\n  let {\n    modalVisible,\n    setModalVisible,\n    todos,\n    setTodos\n  } = _ref2;\n\n  const closeModal = () => setModalVisible(false);\n\n  const addTodo = () => {\n    let input = document.getElementById('modal_input');\n    setTodos(todos.concat([{\n      text: input.value,\n      completed: false\n    }]));\n    setModalVisible(false);\n  };\n\n  const submitForm = event => {\n    event.preventDefault();\n    addTodo();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: modalVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal_container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"modal_box\",\n        onSubmit: event => submitForm(event),\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"modal_title\",\n          children: \"Agrega tu nueva tarea a completar!!!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"modal_input\",\n          placeholder: \"\\xBFQu\\xE9 quieres completar?\",\n          className: \"input_box\",\n          required: true,\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button_box\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button_cancel\",\n            onClick: closeModal,\n            type: \"button\",\n            children: \"Cancelar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button_submit\",\n            onClick: addTodo,\n            type: \"button\",\n            children: \"Agregar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n}\n\nexport { NewTodoModal };","map":{"version":3,"names":["ReactDOM","React","NewTodoModal","setModalVisible","modalVisible","todos","setTodos","createPortal","document","getElementById","NewTodo","closeModal","addTodo","input","concat","text","value","completed","submitForm","event","preventDefault"],"sources":["/home/christian/Code/todo-made-in-react/src/NewTodoModal/NewTodoModal.tsx"],"sourcesContent":["import ReactDOM from \"react-dom\";\nimport './NewTodoModal.css';\nimport React, {FormEvent} from \"react\";\nimport {Todo} from \"../Todo/Todo\";\n\ninterface NewTodoType {\n  setModalVisible :React.Dispatch<React.SetStateAction<boolean>>,\n  modalVisible : boolean,\n  todos : Todo[],\n  setTodos : (todos : Todo[]) => void,\n}\n\nfunction NewTodoModal({setModalVisible, modalVisible, todos, setTodos} : NewTodoType) {\n  return ReactDOM.createPortal(\n    <NewTodo todos={todos} setTodos={setTodos} setModalVisible={setModalVisible} modalVisible={modalVisible} />,\n    document.getElementById('modal') as HTMLElement);\n}\n\nfunction NewTodo({modalVisible, setModalVisible, todos, setTodos} : NewTodoType) {\n\n  const closeModal = () => setModalVisible(false);\n\n  const addTodo = () => {\n    let input = document.getElementById('modal_input') as HTMLInputElement;\n\n    setTodos(todos.concat([{text: input.value, completed: false}]));\n\n    setModalVisible(false);\n  }\n\n  const submitForm = (event :FormEvent) => {\n    event.preventDefault();\n\n    addTodo();\n  }\n\n  return(\n    <>\n      { modalVisible && (\n          <div className='modal_container'>\n            <form\n              className='modal_box'\n              onSubmit={event => submitForm(event)}\n            >\n              <h1 className='modal_title'>\n                Agrega tu nueva tarea a completar!!!\n              </h1>\n              <textarea\n                id='modal_input'\n                placeholder='¿Qué quieres completar?'\n                className='input_box'\n                required={true}\n                autoComplete='off'\n              />\n              <div className='button_box'>\n                <button className='button_cancel' onClick={closeModal} type='button'>Cancelar</button>\n                <button className='button_submit' onClick={addTodo} type='button'>Agregar</button>\n              </div>\n            </form>\n          </div>\n      )}\n    </>\n  );\n}\n\nexport {NewTodoModal};\n\nexport type {NewTodoType};"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,WAArB;AACA,OAAO,oBAAP;AACA,OAAOC,KAAP,MAA+B,OAA/B;;;;AAUA,SAASC,YAAT,OAAsF;EAAA,IAAhE;IAACC,eAAD;IAAkBC,YAAlB;IAAgCC,KAAhC;IAAuCC;EAAvC,CAAgE;EACpF,oBAAON,QAAQ,CAACO,YAAT,eACL,QAAC,OAAD;IAAS,KAAK,EAAEF,KAAhB;IAAuB,QAAQ,EAAEC,QAAjC;IAA2C,eAAe,EAAEH,eAA5D;IAA6E,YAAY,EAAEC;EAA3F;IAAA;IAAA;IAAA;EAAA,QADK,EAELI,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAFK,CAAP;AAGD;;AAED,SAASC,OAAT,QAAiF;EAAA,IAAhE;IAACN,YAAD;IAAeD,eAAf;IAAgCE,KAAhC;IAAuCC;EAAvC,CAAgE;;EAE/E,MAAMK,UAAU,GAAG,MAAMR,eAAe,CAAC,KAAD,CAAxC;;EAEA,MAAMS,OAAO,GAAG,MAAM;IACpB,IAAIC,KAAK,GAAGL,QAAQ,CAACC,cAAT,CAAwB,aAAxB,CAAZ;IAEAH,QAAQ,CAACD,KAAK,CAACS,MAAN,CAAa,CAAC;MAACC,IAAI,EAAEF,KAAK,CAACG,KAAb;MAAoBC,SAAS,EAAE;IAA/B,CAAD,CAAb,CAAD,CAAR;IAEAd,eAAe,CAAC,KAAD,CAAf;EACD,CAND;;EAQA,MAAMe,UAAU,GAAIC,KAAD,IAAsB;IACvCA,KAAK,CAACC,cAAN;IAEAR,OAAO;EACR,CAJD;;EAMA,oBACE;IAAA,UACIR,YAAY,iBACV;MAAK,SAAS,EAAC,iBAAf;MAAA,uBACE;QACE,SAAS,EAAC,WADZ;QAEE,QAAQ,EAAEe,KAAK,IAAID,UAAU,CAACC,KAAD,CAF/B;QAAA,wBAIE;UAAI,SAAS,EAAC,aAAd;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAJF,eAOE;UACE,EAAE,EAAC,aADL;UAEE,WAAW,EAAC,+BAFd;UAGE,SAAS,EAAC,WAHZ;UAIE,QAAQ,EAAE,IAJZ;UAKE,YAAY,EAAC;QALf;UAAA;UAAA;UAAA;QAAA,QAPF,eAcE;UAAK,SAAS,EAAC,YAAf;UAAA,wBACE;YAAQ,SAAS,EAAC,eAAlB;YAAkC,OAAO,EAAER,UAA3C;YAAuD,IAAI,EAAC,QAA5D;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eAEE;YAAQ,SAAS,EAAC,eAAlB;YAAkC,OAAO,EAAEC,OAA3C;YAAoD,IAAI,EAAC,QAAzD;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA;UAAA;UAAA;UAAA;QAAA,QAdF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EAFN,iBADF;AA2BD;;AAED,SAAQV,YAAR"},"metadata":{},"sourceType":"module"}