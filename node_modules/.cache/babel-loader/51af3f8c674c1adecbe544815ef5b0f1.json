{"ast":null,"code":"var _jsxFileName = \"/home/christian/Code/todo-made-in-react/src/StorageChangeAlert/StorageChangeAlert.tsx\";\nimport React from 'react';\nimport { withStorageListener } from \"./withStorageListener\";\nimport { reloadLocalStorage } from \"../Storage/useLocalStorage\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction StorageChangeAlert(_ref) {\n  let {\n    show,\n    toggle,\n    saveTodos\n  } = _ref;\n  if (!show) return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Hubo cambios sobre los todos en otra pesta\\xF1a de tu navegador. \\xA1Por favor actualiza tu pesta\\xF1a!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        toggle(false);\n        saveTodos(reloadLocalStorage());\n      },\n      children: \"Actualizar esta pesta\\xF1a\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\nconst StorageChangeAlertWithListener = withStorageListener(StorageChangeAlert);\nexport default StorageChangeAlertWithListener;","map":{"version":3,"names":["React","withStorageListener","reloadLocalStorage","StorageChangeAlert","show","toggle","saveTodos","StorageChangeAlertWithListener"],"sources":["/home/christian/Code/todo-made-in-react/src/StorageChangeAlert/StorageChangeAlert.tsx"],"sourcesContent":["import React from 'react';\nimport {ToggleComponent, withStorageListener} from \"./withStorageListener\";\nimport {Todo} from \"../Todo/Todo\";\nimport {reloadLocalStorage} from \"../Storage/useLocalStorage\";\n\ntype Reloader = {saveTodos: (todos: Todo[]) => void};\n\ntype ToggleableWithAction = ToggleComponent & Reloader;\nfunction StorageChangeAlert({show, toggle, saveTodos} : ToggleableWithAction) {\n    if(!show)\n        return <></>;\n\n    return (\n        <>\n            <p>Hubo cambios sobre los todos en otra pestaña de tu navegador. ¡Por favor actualiza tu pestaña!</p>\n            <button\n                onClick={() => {\n                    toggle(false)\n                    saveTodos(reloadLocalStorage());\n                }}\n            >\n                Actualizar esta pestaña\n            </button>\n        </>\n    );\n}\n\nconst StorageChangeAlertWithListener = withStorageListener(StorageChangeAlert);\n\nexport default StorageChangeAlertWithListener;\n\nexport type {ToggleableWithAction, Reloader};"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAyBC,mBAAzB,QAAmD,uBAAnD;AAEA,SAAQC,kBAAR,QAAiC,4BAAjC;;;;AAKA,SAASC,kBAAT,OAA8E;EAAA,IAAlD;IAACC,IAAD;IAAOC,MAAP;IAAeC;EAAf,CAAkD;EAC1E,IAAG,CAACF,IAAJ,EACI,oBAAO,qCAAP;EAEJ,oBACI;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MACI,OAAO,EAAE,MAAM;QACXC,MAAM,CAAC,KAAD,CAAN;QACAC,SAAS,CAACJ,kBAAkB,EAAnB,CAAT;MACH,CAJL;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA,gBADJ;AAaH;;AAED,MAAMK,8BAA8B,GAAGN,mBAAmB,CAACE,kBAAD,CAA1D;AAEA,eAAeI,8BAAf"},"metadata":{},"sourceType":"module"}