{"ast":null,"code":"var _jsxFileName = \"/home/christian/Code/todo-made-in-react/src/StorageChangeAlert/withStorageListener.tsx\";\nimport React from \"react\";\nimport { localStorageKey } from \"../Storage/useLocalStorage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction withStorageListener(Component) {\n  return function ComponentWithListener(_ref) {\n    let {\n      setLoading,\n      sincronizeTodos\n    } = _ref;\n    const [storageChange, setStorageChange] = React.useState(false);\n    window.addEventListener('storage', event => {\n      if (event.key === localStorageKey) {\n        setStorageChange(true);\n      }\n    });\n    return /*#__PURE__*/_jsxDEV(Component, {\n      show: storageChange,\n      toggle: setStorageChange,\n      sincronizeTodos: sincronizeTodos,\n      setLoading: setLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this);\n  };\n}\n\nexport { withStorageListener };","map":{"version":3,"names":["React","localStorageKey","withStorageListener","Component","ComponentWithListener","setLoading","sincronizeTodos","storageChange","setStorageChange","useState","window","addEventListener","event","key"],"sources":["/home/christian/Code/todo-made-in-react/src/StorageChangeAlert/withStorageListener.tsx"],"sourcesContent":["import React, {ReactElement} from \"react\";\nimport {localStorageKey} from \"../Storage/useLocalStorage\";\nimport {Reloader, ToggleableWithAction} from \"./StorageChangeAlert\";\n\ninterface ToggleComponent {\n    show : boolean,\n    toggle : React.Dispatch<React.SetStateAction<boolean>>,\n}\n\nfunction withStorageListener(Component : (props : ToggleableWithAction) => ReactElement) {\n    return function ComponentWithListener({setLoading, sincronizeTodos} : Reloader) {\n        const [storageChange, setStorageChange] = React.useState(false);\n\n        window.addEventListener('storage', (event : Event) => {\n            if((event as StorageEvent).key === localStorageKey){\n                setStorageChange(true);\n            }\n        });\n\n        return (\n            <Component\n                show={storageChange}\n                toggle={setStorageChange}\n                sincronizeTodos={sincronizeTodos}\n                setLoading={setLoading}\n            />\n        );\n    }\n}\n\nexport {withStorageListener};\n\nexport type {ToggleComponent};"],"mappings":";AAAA,OAAOA,KAAP,MAAkC,OAAlC;AACA,SAAQC,eAAR,QAA8B,4BAA9B;;;AAQA,SAASC,mBAAT,CAA6BC,SAA7B,EAAyF;EACrF,OAAO,SAASC,qBAAT,OAAyE;IAAA,IAA1C;MAACC,UAAD;MAAaC;IAAb,CAA0C;IAC5E,MAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCR,KAAK,CAACS,QAAN,CAAe,KAAf,CAA1C;IAEAC,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAoCC,KAAD,IAAmB;MAClD,IAAIA,KAAD,CAAwBC,GAAxB,KAAgCZ,eAAnC,EAAmD;QAC/CO,gBAAgB,CAAC,IAAD,CAAhB;MACH;IACJ,CAJD;IAMA,oBACI,QAAC,SAAD;MACI,IAAI,EAAED,aADV;MAEI,MAAM,EAAEC,gBAFZ;MAGI,eAAe,EAAEF,eAHrB;MAII,UAAU,EAAED;IAJhB;MAAA;MAAA;MAAA;IAAA,QADJ;EAQH,CAjBD;AAkBH;;AAED,SAAQH,mBAAR"},"metadata":{},"sourceType":"module"}